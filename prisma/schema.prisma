// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Project {
  id        String   @id @default(cuid())
  title     String
  startDate DateTime
  endDate   DateTime?
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  tasks Task[]
  assigneeColors AssigneeColor[]

  @@map("projects")
}

model Task {
  id           String    @id @default(cuid())
  title        String
  assignee     String
  plannedStart DateTime
  plannedEnd   DateTime
  completedAt  DateTime?
  order        Int       @default(0)
  deleted      Boolean   @default(false)
  projectId    String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  // Relations
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("tasks")
}

model AssigneeColor {
  id        String   @id @default(cuid())
  assignee  String
  colorIndex Int     // 0-4のインデックス（COLOR_PALETTEの配列インデックス）
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  // 同じプロジェクト内で同じ担当者は一つの色設定のみ
  @@unique([projectId, assignee])
  @@map("assignee_colors")
}
